@startuml c4_lessons_updated
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/go.puml
!include DEVICONS/python.puml
!include DEVICONS/postgresql.puml
!include <cloudinsight/rabbitmq>

title Архитектура Lessons (сервисный уровень)

' Пользователь
Person(user, "Пользователь", "")

' Интерфейс
Container(telegram_bot, "Telegram Bot", "Telegram Bot", "telegram bot")
Container(nginx, "Nginx", "Nginx", "Reverse-proxy")

' Сервисы
Container(auth_service, "Auth Service", "Go", "Создание и валидация access токенов", "go")
Container(order_service, "Order Service", "Go", "Работа с заказами и откликами", "go")
Container(user_service, "User Service", "Go", "Работа с пользователями и профилями", "go")
Container(notification_service, "Notification Service", "Python", "Обработка событий и ответы пользователю", "python")

' Базы данных
ContainerDb(order_db, "Order DB", "PostgreSQL", "Хранение заказов и откликов", "postgresql")
ContainerDb(user_db, "User DB", "PostgreSQL", "Хранение данных пользователей и профилей", "postgresql")
ContainerDb(notification_db, "Notification DB", "PostgreSQL", "Хранение тегов заказов и тегов репетиторов", "postgresql")
ContainerQueue(message_broker, "Message Broker", "RabbitMQ", "Очередь сообщений", "rabbitmq")

' Связи
Rel(user, nginx, "Запрос через UI-интерфейс")
Rel(user, telegram_bot, "Взаимодействие внутри Telegram")
Rel(telegram_bot, user, "Ответы, уведомления")

Rel(nginx, auth_service, "Отправка initData")
Rel(telegram_bot, nginx, "Передача команд")
Rel(auth_service, nginx, "Access Token")
Rel(nginx, order_service, "REST API [Token]")

Rel(order_service, user_service, "Получение данных пользователя [gRPC]")
Rel(auth_service, user_service, "Работа с пользователями [gRPC]")
Rel(user_service, message_broker, "Изменения параметров (теги)")
Rel(order_service, message_broker, "Публикация новых событий (создание заказа, отклик)")
Rel(message_broker, notification_service, "Обработка событий")
Rel(notification_service, telegram_bot, "Ответы пользователю (уведомления, сообщения)")
Rel(nginx, notification_service, "Передача команд")

Rel(order_service, order_db, "Чтение / Запись заказов и откликов")
Rel(user_service, user_db, "Чтение / Запись данных пользователей")
Rel(notification_service, notification_db, "Чтение / Запись тегов заказов и тегов репетитора")

@enduml
