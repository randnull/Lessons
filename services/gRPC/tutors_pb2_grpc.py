# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tutors_pb2 as tutors__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/users.UserService/CreateUser',
                request_serializer=tutors__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=tutors__pb2.CreateResponse.FromString,
                )
        self.AddResponsesToTutor = channel.unary_unary(
                '/users.UserService/AddResponsesToTutor',
                request_serializer=tutors__pb2.AddResponseToTutorRequest.SerializeToString,
                response_deserializer=tutors__pb2.AddResponseToTutorResponse.FromString,
                )
        self.CreateNewResponse = channel.unary_unary(
                '/users.UserService/CreateNewResponse',
                request_serializer=tutors__pb2.CreateResponseRequest.SerializeToString,
                response_deserializer=tutors__pb2.Success.FromString,
                )
        self.GetUserById = channel.unary_unary(
                '/users.UserService/GetUserById',
                request_serializer=tutors__pb2.GetById.SerializeToString,
                response_deserializer=tutors__pb2.User.FromString,
                )
        self.GetTutorById = channel.unary_unary(
                '/users.UserService/GetTutorById',
                request_serializer=tutors__pb2.GetById.SerializeToString,
                response_deserializer=tutors__pb2.Tutor.FromString,
                )
        self.GetTutorInfoById = channel.unary_unary(
                '/users.UserService/GetTutorInfoById',
                request_serializer=tutors__pb2.GetById.SerializeToString,
                response_deserializer=tutors__pb2.TutorDetails.FromString,
                )
        self.ChangeTutorActive = channel.unary_unary(
                '/users.UserService/ChangeTutorActive',
                request_serializer=tutors__pb2.SetActiveTutorById.SerializeToString,
                response_deserializer=tutors__pb2.Success.FromString,
                )
        self.GetStudentById = channel.unary_unary(
                '/users.UserService/GetStudentById',
                request_serializer=tutors__pb2.GetById.SerializeToString,
                response_deserializer=tutors__pb2.User.FromString,
                )
        self.GetUserByTelegramId = channel.unary_unary(
                '/users.UserService/GetUserByTelegramId',
                request_serializer=tutors__pb2.GetByTelegramId.SerializeToString,
                response_deserializer=tutors__pb2.User.FromString,
                )
        self.GetAllUsers = channel.unary_unary(
                '/users.UserService/GetAllUsers',
                request_serializer=tutors__pb2.GetAllRequest.SerializeToString,
                response_deserializer=tutors__pb2.GetAllResponse.FromString,
                )
        self.GetAllTutorsPagination = channel.unary_unary(
                '/users.UserService/GetAllTutorsPagination',
                request_serializer=tutors__pb2.GetAllTutorsPaginationRequest.SerializeToString,
                response_deserializer=tutors__pb2.GetTutorsPaginationResponse.FromString,
                )
        self.UpdateBioTutor = channel.unary_unary(
                '/users.UserService/UpdateBioTutor',
                request_serializer=tutors__pb2.UpdateBioRequest.SerializeToString,
                response_deserializer=tutors__pb2.UpdateBioResponse.FromString,
                )
        self.UpdateTags = channel.unary_unary(
                '/users.UserService/UpdateTags',
                request_serializer=tutors__pb2.UpdateTagsRequest.SerializeToString,
                response_deserializer=tutors__pb2.Success.FromString,
                )
        self.CreateReview = channel.unary_unary(
                '/users.UserService/CreateReview',
                request_serializer=tutors__pb2.CreateReviewRequest.SerializeToString,
                response_deserializer=tutors__pb2.CreateReviewResponse.FromString,
                )
        self.GetReview = channel.unary_unary(
                '/users.UserService/GetReview',
                request_serializer=tutors__pb2.GetReviewRequest.SerializeToString,
                response_deserializer=tutors__pb2.Review.FromString,
                )
        self.GetReviews = channel.unary_unary(
                '/users.UserService/GetReviews',
                request_serializer=tutors__pb2.GetReviewsRequest.SerializeToString,
                response_deserializer=tutors__pb2.GetReviewsResponse.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddResponsesToTutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNewResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTutorById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTutorInfoById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeTutorActive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStudentById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByTelegramId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTutorsPagination(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBioTutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReviews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=tutors__pb2.CreateUserRequest.FromString,
                    response_serializer=tutors__pb2.CreateResponse.SerializeToString,
            ),
            'AddResponsesToTutor': grpc.unary_unary_rpc_method_handler(
                    servicer.AddResponsesToTutor,
                    request_deserializer=tutors__pb2.AddResponseToTutorRequest.FromString,
                    response_serializer=tutors__pb2.AddResponseToTutorResponse.SerializeToString,
            ),
            'CreateNewResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNewResponse,
                    request_deserializer=tutors__pb2.CreateResponseRequest.FromString,
                    response_serializer=tutors__pb2.Success.SerializeToString,
            ),
            'GetUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserById,
                    request_deserializer=tutors__pb2.GetById.FromString,
                    response_serializer=tutors__pb2.User.SerializeToString,
            ),
            'GetTutorById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTutorById,
                    request_deserializer=tutors__pb2.GetById.FromString,
                    response_serializer=tutors__pb2.Tutor.SerializeToString,
            ),
            'GetTutorInfoById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTutorInfoById,
                    request_deserializer=tutors__pb2.GetById.FromString,
                    response_serializer=tutors__pb2.TutorDetails.SerializeToString,
            ),
            'ChangeTutorActive': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeTutorActive,
                    request_deserializer=tutors__pb2.SetActiveTutorById.FromString,
                    response_serializer=tutors__pb2.Success.SerializeToString,
            ),
            'GetStudentById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStudentById,
                    request_deserializer=tutors__pb2.GetById.FromString,
                    response_serializer=tutors__pb2.User.SerializeToString,
            ),
            'GetUserByTelegramId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByTelegramId,
                    request_deserializer=tutors__pb2.GetByTelegramId.FromString,
                    response_serializer=tutors__pb2.User.SerializeToString,
            ),
            'GetAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUsers,
                    request_deserializer=tutors__pb2.GetAllRequest.FromString,
                    response_serializer=tutors__pb2.GetAllResponse.SerializeToString,
            ),
            'GetAllTutorsPagination': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTutorsPagination,
                    request_deserializer=tutors__pb2.GetAllTutorsPaginationRequest.FromString,
                    response_serializer=tutors__pb2.GetTutorsPaginationResponse.SerializeToString,
            ),
            'UpdateBioTutor': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBioTutor,
                    request_deserializer=tutors__pb2.UpdateBioRequest.FromString,
                    response_serializer=tutors__pb2.UpdateBioResponse.SerializeToString,
            ),
            'UpdateTags': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTags,
                    request_deserializer=tutors__pb2.UpdateTagsRequest.FromString,
                    response_serializer=tutors__pb2.Success.SerializeToString,
            ),
            'CreateReview': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReview,
                    request_deserializer=tutors__pb2.CreateReviewRequest.FromString,
                    response_serializer=tutors__pb2.CreateReviewResponse.SerializeToString,
            ),
            'GetReview': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReview,
                    request_deserializer=tutors__pb2.GetReviewRequest.FromString,
                    response_serializer=tutors__pb2.Review.SerializeToString,
            ),
            'GetReviews': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReviews,
                    request_deserializer=tutors__pb2.GetReviewsRequest.FromString,
                    response_serializer=tutors__pb2.GetReviewsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'users.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/CreateUser',
            tutors__pb2.CreateUserRequest.SerializeToString,
            tutors__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddResponsesToTutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/AddResponsesToTutor',
            tutors__pb2.AddResponseToTutorRequest.SerializeToString,
            tutors__pb2.AddResponseToTutorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNewResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/CreateNewResponse',
            tutors__pb2.CreateResponseRequest.SerializeToString,
            tutors__pb2.Success.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetUserById',
            tutors__pb2.GetById.SerializeToString,
            tutors__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTutorById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetTutorById',
            tutors__pb2.GetById.SerializeToString,
            tutors__pb2.Tutor.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTutorInfoById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetTutorInfoById',
            tutors__pb2.GetById.SerializeToString,
            tutors__pb2.TutorDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeTutorActive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/ChangeTutorActive',
            tutors__pb2.SetActiveTutorById.SerializeToString,
            tutors__pb2.Success.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStudentById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetStudentById',
            tutors__pb2.GetById.SerializeToString,
            tutors__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByTelegramId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetUserByTelegramId',
            tutors__pb2.GetByTelegramId.SerializeToString,
            tutors__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetAllUsers',
            tutors__pb2.GetAllRequest.SerializeToString,
            tutors__pb2.GetAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllTutorsPagination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetAllTutorsPagination',
            tutors__pb2.GetAllTutorsPaginationRequest.SerializeToString,
            tutors__pb2.GetTutorsPaginationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBioTutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/UpdateBioTutor',
            tutors__pb2.UpdateBioRequest.SerializeToString,
            tutors__pb2.UpdateBioResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/UpdateTags',
            tutors__pb2.UpdateTagsRequest.SerializeToString,
            tutors__pb2.Success.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/CreateReview',
            tutors__pb2.CreateReviewRequest.SerializeToString,
            tutors__pb2.CreateReviewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetReview',
            tutors__pb2.GetReviewRequest.SerializeToString,
            tutors__pb2.Review.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReviews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/users.UserService/GetReviews',
            tutors__pb2.GetReviewsRequest.SerializeToString,
            tutors__pb2.GetReviewsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
