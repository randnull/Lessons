@startuml c4_containers
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/go.puml
!include DEVICONS/python.puml
!include DEVICONS/postgresql.puml
!include <cloudinsight/kafka>

title Архитектура Lessons (Сервисный уровень)

' Пользователь
Person(tutor, "Репетитор", "")
Person(student, "Ученик", "")

' Интерфейс
Container(LessonsBot, "Телеграмм бот", "Telegram Bot", "Чат с ботом для учеников")
Container(TutorsBot, "Телеграмм бот для репетиторов", "Telegram Bot", "Чат с ботом для репетиторов")

Container(TutorApp, "Приложение для репетиторов", "Telegram Mini App", "Интерфейс для управления профилем и заказами")
Container(LessonsApp, "Приложение для учеников", "Telegram Mini App", "Интерфейс для создания заказов")

' Основные микросервисы
Container(order_service, "Сервис заказов", "Go", "Управление заказами (принятие, отклонение)", "go")
Container(answer_engine_service, "Сервис обработки заказов и уведомлений", "Go", ".", "go")
Container(user_service, "Сервис хранения информации о репетиторе", "Go", ".", "go")
Container(review_service, "Сервис хранения отзывов", "Go", ".", "go")
'Container(telegram_bot, "Сервис хранения отзывов", "Go", ".", "go")

' Базы данных
ContainerDb(OrderDB, "orders_postgres", "Postgres", "Хранение данных заказов", "postgresql")
'ContainerQueue(NotificationQueue, "notifications_topic", "kafka", "Очередь для уведомлений", "kafka")

' Связи
Rel(tutor, TutorsBot, "Открыть приложение, получить уведомление")
Rel(TutorsBot, TutorApp, "Управление профилем, управление заказами")

Rel(student, LessonsBot, "Открыть приложение, получить уведомление")
Rel(LessonsBot, LessonsApp, "Создание заказов, просмотр откликов")

Rel(TutorApp, order_service, "Просмотр/отклик на заказ", "REST")
Rel(LessonsApp, order_service, "Создание/Просмотр заказа", "REST")

Rel(order_service, OrderDB, "Хранение данных заказов")

'
'Rel(order_service, notification_service, "Уведомление об изменениях статуса", "gRPC")
'Rel(notification_service, NotificationQueue, "Отправка уведомлений в очередь", "Kafka")
'Rel(notification_service, TutorApp, "Отправка уведомлений репетиторам")
@enduml
